@model JobBoardMVC.Models.Company

@{
	Layout = "../Shared/_Layout.cshtml";
}

@* Page used to add a new company to the database.
   Part of the CRUD operation. This page is restricted to only Admin users.*@
<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width, user-scalable=no, maximum-scale=1.0, initial-scale=1.0">

	<title>Create</title>
</head>
<body>
	@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/jqueryval")

	@using (Html.BeginForm("Create", "CompanyInfo", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
	{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">
			<h4>Add a New Company</h4>
			<p style="color:red;">@ViewBag.ErrorMessage</p>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.CompanyLink, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.CompanyLink, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.CompanyLink, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.CareerPage, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.CareerPage, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.CareerPage, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.CompanyType, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.CompanyType, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.CompanyType, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IndustryServed, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.IndustryServed, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.IndustryServed, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.LanguagesUsed, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.LanguagesUsed, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.LanguagesUsed, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form=group">
				@Html.Label("Logo", new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<input type="file" id="Logo" name="upload" />
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Create" class="btn btn-default" />
				</div>
			</div>
		</div>
	}

	<div class="control-label col-md-3" style="padding-left: 60px;">
		@Html.ActionLink("Back to Dashboard", "Admin", "Home")
	</div>
</body>
</html>
